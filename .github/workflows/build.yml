name: Matrix Build

on: [workflow_dispatch]

jobs:
  build:
    name: Build for ${{ matrix.maroonBuildTarget }}
    runs-on: ubuntu-latest
    
    # create job matrix
    # runs job once for each build target
    strategy:
      # if fail-fast is set to true, the job will abort if one of the builds fail
      fail-fast: false
      matrix:
        projectPath: [unity]
        include:
          
          - targetPlatform: StandaloneWindows64
            maroonBuildTarget: PC

          - targetPlatform: StandaloneWindows64
            maroonBuildTarget: VR

          - targetPlatform: WebGL
            maroonBuildTarget: WebGL

    steps:

      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache
      - uses: actions/cache@v4
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ hashFiles(format('{0}/Assets/**', matrix.projectPath), format('{0}/Packages/**', matrix.projectPath), format('{0}/ProjectSettings/**', matrix.projectPath)) }}
          restore-keys: |
            Library-
            
      # Build
      - name: Build
        uses: game-ci/unity-builder@v4.2.1

        # environment vars needed by unity-builder to activate the unity license
        # defined in the Actions Secrets in the repo settings
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

        with:
          # run the custom build script
          buildMethod: Maroon.Build.BuildPlayer.ActionsBuild
          # with these params:
          customParameters: -maroonBuildPath ../build -maroonBuildTarget ${{ matrix.maroonBuildTarget }}
          # we must specify a target platform, build path, build name and project path for unity-builder
          targetPlatform: ${{ matrix.targetPlatform }}
          projectPath: ${{ matrix.projectPath }}
          buildName: ${{ matrix.maroonBuildTarget }}
          buildsPath: build

      # Upload build
      - name: Upload build for ${{ matrix.maroonBuildTarget }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.maroonBuildTarget }}-build
          path: build
          # if no files match the supplied path, fail job with error
          if-no-files-found: error
        
